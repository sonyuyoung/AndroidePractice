<?xml version="1.0" encoding="utf-8"?>
<androidx.drawerlayout.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawer"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!--드러워 화면 구성
    기본은 : 최상위 부모는 드로워 화면 태그
    그 하위에 자식 뷰가 2개인데,
    뷰1 본화면,
    뷰2 서랍 뷰 화면-->


    <androidx.constraintlayout.widget.ConstraintLayout

        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        tools:context=".ch11_Test.ViewTest2Activity">


        <LinearLayout
            android:id="@+id/Linear1"
            android:layout_width="match_parent"
            android:layout_height="500dp"
            android:orientation="vertical"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"/>


        <!--CoordinatorLayout의 역할 뷰 2개를 연동, 상호작용 하게끔 묶어주는 역할-->
        <androidx.coordinatorlayout.widget.CoordinatorLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent">
            <!--빠진 부분 수정 : 툴바 밑에 , 앱의 소개나 특정의 화면을 나타낼 때, -->
            <com.google.android.material.appbar.AppBarLayout
                android:id="@+id/appbar"
                android:layout_width="match_parent"
                android:layout_height="250dp">
                <!--앱바를 구성하기 (툴바 포함하기.)-->
                <!--일반 앱바 화면 -> 접히는 화면으로 변경.
                CollapsingToolbarLayout , 상호 작용하는 뷰를 연결시켜줌 : 스크롤을 동작시
                양쪽으로 스크롤시 같이 동작함. -->
                <com.google.android.material.appbar.CollapsingToolbarLayout
                    android:layout_width="match_parent"
                    android:layout_height="250dp"
                    android:background="@color/main_text_bgcolor"
                    app:expandedTitleMarginBottom="50dp"
                    app:expandedTitleMarginStart="50dp"
                    app:expandedTitleTextColor="@color/main_text_color"
                    app:layout_scrollFlags="scroll|exitUntilCollapsed"
                    app:title="AppBar Title"

                    >
                    <!--app:contentScrim="#03A9F4": 한줄로 표시가 되었을 경우 나타나는 색깔-->

                    <ImageView
                        android:layout_width="match_parent"
                        android:layout_height="match_parent"
                        android:scaleType="centerCrop"
                        android:src="@drawable/a"
                        app:layout_collapseMode="parallax" />

                    <!--툴바 뷰 생성 -->
                    <androidx.appcompat.widget.Toolbar
                        android:id="@+id/toolbar"
                        android:layout_width="match_parent"
                        android:layout_height="?attr/actionBarSize"
                        app:layout_collapseMode="pin"

                        />


                </com.google.android.material.appbar.CollapsingToolbarLayout>
                <!--빠진 부분 수정-->
            </com.google.android.material.appbar.AppBarLayout>

            <!--앱바 , 리사이클러뷰 연동 테스트 -->
            <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/recyclerViewTest"
                android:layout_width="match_parent"
                android:layout_height="200dp"
                app:layout_behavior="@string/appbar_scrolling_view_behavior" />

            <!--CoordinatorLayout 닫는 태그 -->
            <!--자식의 요소가 2개인데, 1) AppBarLayout 2) RecyclerView
            2) RecyclerView 속성 app:layout_behavior를 이용해서, 서로가 스클로시
            같이 움직임을 조절할수 있음. -->







            <ScrollView
                android:id="@+id/scroll"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                app:layout_behavior="@string/appbar_scrolling_view_behavior"
                android:layout_marginTop="200dp"
                app:layout_constraintTop_toBottomOf="@+id/Linear1">

                <LinearLayout
                    android:id="@+id/Linear2"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:orientation="vertical"
                    >

                    <com.google.android.material.tabs.TabLayout
                        android:id="@+id/Test2tabs"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:tabMode="scrollable"></com.google.android.material.tabs.TabLayout>

                    <androidx.viewpager2.widget.ViewPager2
                        android:id="@+id/viewPager1"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        />



                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="horizontal">

                        <Button
                            android:id="@+id/addBtn"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center"
                            android:layout_marginStart="80dp"
                            android:text="데이터추가" />

                        <Button
                            android:id="@+id/delBtn"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center"
                            android:layout_marginStart="30dp"
                            android:text="데이터삭제" />

                    </LinearLayout>


                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />

                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />

                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />

                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />


                    <androidx.viewpager2.widget.ViewPager2
                        android:id="@+id/viewPager2"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        />

                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <Button
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="test" />
                    <androidx.viewpager2.widget.ViewPager2
                        android:id="@+id/viewPager3"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        />

                </LinearLayout>


            </ScrollView>

        </androidx.coordinatorlayout.widget.CoordinatorLayout>

        <!--플로팅 액션 버튼 추가하기-->
        <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton
            android:id="@+id/floatingActionButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="80dp"
            android:layout_marginRight="20dp"
            android:text="클릭시 해당 문자열 출력해보기."
            app:icon="@drawable/baseline_home_24"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            android:layout_marginBottom="50dp"/>


    </androidx.constraintlayout.widget.ConstraintLayout>
    <!--</ScrollView>-->
    <!--</androidx.core.widget.NestedScrollView>-->
    <!--위에 뷰가 기본 뷰1 -> 주내용

    뷰2는 서랍처럼 사용이 될 뷰2-->

    <!-- <TextView
         android:layout_width="400dp"
         android:layout_height="match_parent"
         android:text="테스트 서랍화면"
         style="@style/MyTextCss"
         android:gravity="center_horizontal |center_vertical"
         android:layout_gravity="start"
         />-->

    <!--드로워 화면에 네비게이션 헤더및 본문 메뉴 추가-->
    <com.google.android.material.navigation.NavigationView
        android:id="@+id/main_drawer_view"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        app:headerLayout="@layout/navigation_header"
        app:menu="@menu/navigation_menu"/>

</androidx.drawerlayout.widget.DrawerLayout>